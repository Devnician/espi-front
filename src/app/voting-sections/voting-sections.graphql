query GetVotingSections(
  $limit: Int
  $offset: Int
  $condition: voting_section_bool_exp! = {}
  $orderBy: [voting_section_order_by!] = { createdAt: desc }
) {
  voting_section(
    limit: $limit
    offset: $offset
    where: $condition
    order_by: $orderBy
  ) {
    id
    createdAt
    updatedAt
    openedAt
    closedAt
    addressId
    address {
      ...AddressFull
    }
  }
  voting_section_aggregate(where: $condition) {
    aggregate {
      count
    }
  }
}

mutation OpenVotingSection($sectionId: Int!, $when: timestamptz!) {
  update_voting_section_by_pk(
    pk_columns: { id: $sectionId }
    _set: { openedAt: $when }
  ) {
    id
    openedAt
  }
}

mutation CloseVotingSection($sectionId: Int!, $when: timestamptz!) {
  update_voting_section_by_pk(
    pk_columns: { id: $sectionId }
    _set: { closedAt: $when }
  ) {
    id
    closedAt
  }
}

query GetCommissionOfVotingSection($sectionId: Int!) {
  commissions(where: { votingSectionId: { _eq: $sectionId } }) {
    ...SectionCommissionFields
  }
}

mutation CreateSectionCommission(
  $set: [users_insert_input!]!
  $commission: commissions_insert_input!
) {
  insert_users(
    objects: $set
    on_conflict: { constraint: users_pkey, update_columns: [role, secondRole] }
  ) {
    returning {
      ...UserFields
    }
  }
  insert_commissions_one(object: $commission) {
    ...SectionCommissionFields
  }
}

fragment SectionCommissionFields on commissions {
  id
  createdAt
  updatedAt
  votingSectionId
  commision_members {
    id
    createdAt
    updatedAt
    isLeader
    user {
      ...UserFields
    }
  }
}
